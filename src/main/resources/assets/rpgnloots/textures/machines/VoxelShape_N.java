Stream.of(
Block.box(0, 0, 2, 7, 1, 8),
Block.box(1, 10, 3, 15, 11, 13),
Block.box(1, 12, 3, 15, 13, 13),
Block.box(0, 11, 2, 16, 12, 14),
Block.box(7, 13, 10, 8, 14, 11),
Block.box(11, 13, 9, 12, 14, 10),
Block.box(11, 13, 6, 12, 14, 7),
Block.box(12, 13, 8, 13, 14, 9),
Block.box(12, 13, 7, 13, 14, 8),
Block.box(3, 13, 7, 4, 14, 8),
Block.box(3, 13, 8, 4, 14, 9),
Block.box(8, 13, 10, 9, 14, 11),
Block.box(8, 13, 5, 9, 14, 6),
Block.box(7, 13, 5, 8, 14, 6),
Block.box(2, 13, 4, 3, 14, 5),
Block.box(13, 13, 4, 14, 14, 5),
Block.box(13, 13, 11, 14, 14, 12),
Block.box(2, 13, 11, 3, 14, 12),
Block.box(4, 13, 9, 5, 14, 10),
Block.box(4, 13, 6, 5, 14, 7),
Block.box(0, 0, 8, 7, 1, 14),
Block.box(1, 1, 8, 6, 2, 13),
Block.box(2, 2, 8, 5, 10, 12),
Block.box(11, 2, 8, 14, 10, 12),
Block.box(10, 1, 8, 15, 2, 13),
Block.box(9, 0, 8, 16, 1, 14),
Block.box(11, 2, 4, 14, 10, 8),
Block.box(10, 1, 3, 15, 2, 8),
Block.box(9, 0, 2, 16, 1, 8),
Block.box(2, 2, 4, 5, 10, 8),
Block.box(1, 1, 3, 6, 2, 8)
).reduce((v1, v2) -> VoxelShapes.join(v1, v2, IBooleanFunction.OR)).get();